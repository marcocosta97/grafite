cmake_minimum_required(VERSION 3.16.3)
project(Grafite
        VERSION 1.0
        HOMEPAGE_URL https://github.com/marcocosta97/grafite)

option(BUILD_EXAMPLES "Build the examples" ON)
option(BUILD_BENCHMARKS "Build the benchmark targets" ON)
option(USE_BOOST "Use the Boost library" ON)
option(USE_MULTI_THREADED "Use multi-threaded version of the library" OFF)

list(APPEND SUCCINCT_LIBS "sux" "sdsl-lite")

set(CMAKE_CXX_STANDARD 17)
if (CMAKE_BUILD_TYPE STREQUAL "Release")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native")
else()
    set(USE_MULTI_THREADED OFF)
endif ()

add_library(grafitelib INTERFACE)

if ("sux" IN_LIST SUCCINCT_LIBS)
    message(STATUS "Using sux")
    target_compile_definitions(grafitelib INTERFACE -DSUCCINCT_LIB_SUX)
    target_include_directories(grafitelib INTERFACE include lib/sux)
endif()
if ("sdsl-lite" IN_LIST SUCCINCT_LIBS)
    message(STATUS "Using sdsl-lite")
    target_compile_definitions(grafitelib INTERFACE -DSUCCINCT_LIB_SDSL)
    target_include_directories(grafitelib INTERFACE include lib/sdsl-lite/include)
endif()

set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_STATIC_RUNTIME OFF)
if (USE_BOOST AND USE_MULTI_THREADED)
    set(Boost_USE_MULTITHREADED ON)
    find_package(Boost REQUIRED COMPONENTS thread)
    message(STATUS "Boost found, using it for the multi-threaded version of the library")
    target_compile_definitions(grafitelib INTERFACE -DUSE_LIBRARY_BOOST_PARALLEL)
    target_link_libraries(grafitelib INTERFACE Boost::thread)
    target_include_directories(grafitelib INTERFACE ${Boost_INCLUDE_DIRS})
elseif (USE_BOOST)
    set(Boost_USE_MULTITHREADED OFF)
    find_package(Boost REQUIRED)
    message(STATUS "Boost found, using it for the single-threaded version of the library")
    target_compile_definitions(grafitelib INTERFACE -DUSE_LIBRARY_BOOST)
    target_include_directories(grafitelib INTERFACE ${Boost_INCLUDE_DIRS})
elseif (USE_MULTI_THREADED)
    message(STATUS "Using TBB and std::execution for the multi-threaded version of the library")
    find_package(TBB REQUIRED)
    target_compile_definitions(grafitelib INTERFACE -DUSE_LIBRARY_STL_PARALLEL)
    target_link_libraries(grafitelib INTERFACE tbb)
else ()
    # target_compile_definitions(grafitelib INTERFACE -DUSE_LIBRARY_STL)
endif ()

if (BUILD_EXAMPLES)
    message(STATUS "Building examples")
    add_subdirectory(examples)
endif ()

if (BUILD_BENCHMARKS)
    message(STATUS "Building benchmarks")
    add_subdirectory(bench)
endif ()

